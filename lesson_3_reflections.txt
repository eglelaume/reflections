When would you want to create a remote repository rather than keeping all your work local?

	Remote repository is great when I want to work on my file from different computer or whenever I need to colaborate with other people.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
	
	Pulling changes manually assures that the copy will be definitely up-to-date. 

Describe the differences between forks, clones, and branches. When would you use one instead of another?
	
	Forks, clones and branches are all copies of the repositories, but they serve different purpous. So, if I am colaborating with other people and I want to work on their code but don't have a permission to modify it, I'd fork their code first that would produce a copy of code on Github. Then, I'd clone the fork onto my local. I would then be able to continue working on it. In case I want to experiment with the code I cloned in the first place, I'd create a branch. Creating a new branch would allow me to work on a code without affecting the master I cloned and merge my experiments into the master the moment I feel confident with my changes.

What is the benefit of having a copy of the last known state of the remote stored locally?

	The main benefit of having a copy of the latest remote stored locally is that I can combine conflicting changes when working in a team. 

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

	I guess, I would need to collaborate whilst discussing things in person, via email, slack phone...This sounds like maybe sometimes a more immediate way of collaborating, especially, if the change being made is as small as a typo. However, if I think about any bigger changes to the code, it feels like Git and Github is less time consuming way of collaborating. Also, it feels like it is more accurate when it comes to keeping track of different changes.
